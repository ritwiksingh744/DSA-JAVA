/*Given two integers M and N, generate all primes between M and N.
*Input:
*M=1,N=10
*Output:
*2 3 5 7

*/

import java.io.*;
import java.util.*;

class GFG {
    public static void main(String args[]) throws IOException {
        BufferedReader read =
            new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());
        while (t-- > 0) {
            String S[] = read.readLine().split(" ");
            int M = Integer.parseInt(S[0]);
            int N = Integer.parseInt(S[1]);
            Solution ob = new Solution();
            ArrayList<Integer> ans = ob.primeRange(M, N);
            for (int i : ans) System.out.print(i + " ");
            System.out.println();
        }
    }
}




class Solution {
    
    boolean isPrime(int n){
        if(n==1)
            return false;
        if(n==2 || n==3)
            return true;
        if(n%2==0 || n%3==0)
            return false;
        for(int i=5;i*i<=n;i+=6)
            if(n%i==0 || n%(i+2)==0)
               return false;
        return true;       
    }
    ArrayList<Integer> primeRange(int M, int N) {
       
        ArrayList<Integer> alist=new ArrayList<>();
        for(int i=M;i<=N;i++)
            if(isPrime(i)==true)
               alist.add(i);
               
        return alist;       
    }
}  // code by Ritwik Singh