/*Gievn two numbers A and B, the task is to find f(AB). f(n) which takes a positive integer n as input and does the following:
Input: A = 6, B = 6
Output: 9
Explanation: 
f(66) = f(46656) = f(27) = f(9) = 9
*/


import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
{
    public static void main(String[] args) throws IOException
    {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int T = Integer.parseInt(br.readLine().trim());
        while(T-->0)
        {
            String s = br.readLine().trim();
            String[] s1 = s.split(" ");
            int A = Integer.parseInt(s1[0]);
            int B = Integer.parseInt(s1[1]);
            Solution ob = new Solution();
            int ans = ob.SumofDigits(A, B);
            System.out.println(ans);           
        }
    }
}
// } Driver Code Ends


//User function Template for Java
class Solution
{
    long digitSum(long n)
    {
        if(n==0)
            return 0;
        return (n%9==0)?9:(n%9);    
    }
    // public int sum_of_digits(long n)
    // {
    //     int sum=0;
    //     while(n>0){
    //         sum+= n%10;
    //         n/=10;
    //     }
    //     if(sum<10)
    //       return sum;
    //     else 
    //       return sum_of_digits(sum);
    // }
    long powdigit(long A,long B)
    {
        long res=1;
        while(B!=0){
            if(B%2==1){
                res*=digitSum(A);
                res=digitSum(res);
            }
            A=digitSum(digitSum(A)*digitSum(A));
            B/=2;
        }
        return res;
    }
    
    public int SumofDigits(int A, int B)
    {
        
        return (int)powdigit((long)A,(long)B);
    }
}

// code by Ritwik Singh